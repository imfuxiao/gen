package model

import (
	"strconv"
	"time"
	"errors"
	"github.com/kataras/iris/context"
{{- if eq .DbType "mongo"}}
	"acs/commons/mongo/criteria"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/primitive"
{{end}}
)

type {{.ModelName}} struct {
{{ if eq .DbType "mongo"}}	Id *primitive.ObjectID `bson:"_id,omitempty" json:"-"`{{end -}}
{{- range $field := .Fields}}
	{{ScoreToBigCamel $field.Name}} {{if Contains $field.Name "time"}}*{{end}}{{$field.GetType}} {{$field.GetTag|ToHTML}}{{if ne $field.Comment ""}} // {{$field.Comment}}{{end -}}
{{end }}
}


// 查询参数
type Search{{.ModelName}}Param struct {
	Page   Page
	Params bson.D
}

func NewSearch{{.ModelName}}Param(param *context.RequestParams) (*Search{{.ModelName}}Param, error) {
    // TODO 完成自己的struct初始化, 如下
	var s Search{{.ModelName}}Param

	s.Page.Id = param.GetString("id")
	s.Page.SortField = param.GetString("sortField")
	s.Page.IsAsc = param.GetBoolDefault("isAsc", true)
	s.Page.PageNo = param.GetInt64Default("pageNumber", 1)
	s.Page.PageSize = param.GetInt64Default("pageSize", 20)

	filter := criteria.Where()
	// TODO: 自定义分页查询条件

	s.Params = filter.Filter()
    return &s,nil
}

// 查询结果
type Response{{.ModelName}}Data struct {
	Page         Page             `json:"page"` // 页码信息
    {{.ModelName|ScoreToBigCamel}}List []{{.ModelName}} `json:"list"` // 查询数据
}
